---

version: '3'

services:
  init:
    image: "${IMAGE}:${VERSION}"
    command: "init"
    restart: "no"
    depends_on:
      - zed
    links:
      - elasticsearch
      - database
      - redis
    env_file: ./docker-compose.env
    environment:
      - APPLICATION_ENV=development
    volumes:
      - ../config:/data/shop/config
      - ../assets:/data/shop/assets
      - ../src/Pyz:/data/shop/src/Pyz
      - ../composer.json:/data/shop/composer.json
      - ../package.json:/data/shop/package.json

  yves:
    #image: "${IMAGE}:${VERSION}"
    image: "php:7.0.21"
    build:
      context: ..
      args:
        - NETRC=$NETRC
    command: "run-yves"
    restart: always
    ports:
      - "2380:80"
    links:
      - zed
      - redis
      - elasticsearch
      - phantomjs
    env_file: ./docker-compose.env
    environment:
      - APPLICATION_ENV=development
      - ENABLE_OPCACHE=true
    volumes:
      - ../config:/data/shop/config
      - ../assets:/data/shop/assets
      - ../src/Pyz:/data/shop/src/Pyz
      - ../composer.json:/data/shop/composer.json
      - ../package.json:/data/shop/package.json

  zed:
    image: "${IMAGE}:${VERSION}"
    build:
      context: ..
      args:
        - NETRC=$NETRC
    command: "run-zed"
    restart: always
    ports:
      - "2381:80"
    links:
      - redis
      - elasticsearch
      - database
    env_file: ./docker-compose.env
    environment:
      - APPLICATION_ENV=development
      - ENABLE_OPCACHE=true
    volumes:
      - ../config:/data/shop/config
      - ../assets:/data/shop/assets
      - ../src/Pyz:/data/shop/src/Pyz
      - ../composer.json:/data/shop/composer.json
      - ../package.json:/data/shop/package.json

  phantomjs:
    image: "wernight/phantomjs"
    restart: always
    ports:
      - "8910:8910"
    command: "phantomjs --webdriver=8910"

  cron:
    image: "${IMAGE}:${VERSION}"
    build:
      context: ..
      args:
        - NETRC=$NETRC
    command: "run-crond"
    restart: always
    links:
      - zed
      - redis
      - elasticsearch
      - database
    env_file: ./docker-compose.env
    environment:
      - APPLICATION_ENV=development
    volumes:
      - ../config:/data/shop/config
      - ../assets:/data/shop/assets
      - ../src/Pyz:/data/shop/src/Pyz
      - ../composer.json:/data/shop/composer.json
      - ../package.json:/data/shop/package.json

  redis:
    image: "redis:3.2-alpine"
    restart: always

  elasticsearch:
    image: "elasticsearch:2.4-alpine"
    restart: always
    depends_on:
      - database

  database:
    image: "postgres:9.4.11-alpine"
    restart: always
    env_file: ./docker-compose.env
