# Rationale:
#   - Build only master and tags
#   - Master is the most current not yet released state
#   - Tags are the only way to release a version
#   - If tag matches the latest version configured here, the floating tag
#     `:latest` will be conferred to this particular IMAGE.
#   - PR are being built and tested, but not published
#   - Concurrency is disabled; Newer jobs superseding older ones
#   - To share IMAGE between stages the intermediate product will be taged with
#     `:ci-$variant` and pushed to docker hub
sudo: false
#dist: trusty
language: bash
services:
  - docker

branches:
  only:
    - master
    - /^\d+\.\d+\.\d+$/

env:
  - VARIANT=php71 OS=alpine LATEST=0.9.2
  - VARIANT=php71 OS=debian
  - VARIANT=php70 OS=alpine 
  - VARIANT=php70 OS=debian

before_script:
  - env | sort
  - export IMAGE="claranet/spryker-base"
  - export TAG="${VARIANT:+-$VARIANT}${OS:+-$OS}"
  - export VERSION="${TRAVIS_BRANCH:-${TRAVIS_TAG}}"
  - export VERSION_TAG="${VERSION}${TAG}"
  - export tagci="ci${VARIANT:+-$VARIANT}${OS:+-$OS}"

script:
  - ./scripts/build.sh ./Dockerfiles/Dockerfile${TAG}.inc.sh
  - docker images
  - echo "[INFO] Testing IMAGE $IMAGE:$VERSION_TAG ..."
  - docker run -it --rm $IMAGE:$VERSION_TAG php -i 
  - ./scripts/travis-publish.sh

#deploy: 
#  skip_cleanup: true
#  provider: script
#  script: ./scripts/travis-publish.sh
#  on: 
#    tags: true
#
#  - echo "Publishing IMAGE $IMAGE:$VERSION_TAG ..."
#  - echo "Authenticating to docker hub ..."
#  - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
#  - docker push $IMAGE:$VERSION_TAG
#  - if [ "$TRAVIS_VERSION_TAG" == "$LATEST" ]; then
#      echo "Setting floating tag `latest` for this IMAGE"; 
#      docker tag $IMAGE:$VERSION_TAG $IMAGE:latest; 
#      docker push $IMAGE:latest; 
#    fi

# FIXME 
#
# Travis CI limitation: Matrix expansion does not work with build stages. 
# See: 
#   * https://github.com/travis-ci/travis-ci/issues/8293
#   * https://docs.travis-ci.com/user/build-stages/#Build-Stages-and-Build-Matrix-Expansion
#
#stages:
#  - Build
#  - Test
#  - Publish
#
#jobs:
#  include:
#    - &build
#      stage: Build
#      script:
#        - docker build -t $IMAGE:$tagci .
#        - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
#        - docker push $IMAGE:$tagci
#    - <<: *build
#      env: OS=alpine VARIANT=php71 LATEST=0.9.2
#    - <<: *build
#      env: OS=alpine VARIANT=php70 
#
#    - &test
#      stage: Test
#      script:
#        - docker run --rm -t $IMAGE:$tagci /entrypoint.sh build-base
#    - <<: *test
#      env: OS=alpine VARIANT=php71 LATEST=0.9.2
#    - <<: *test
#      env: OS=alpine VARIANT=php70 
#
#    - &publish
#      stage: Publish
#      deploy:
#        provider: script
#        script: ./scripts/travis-publish.sh
#        on: 
#          tags: true
#    - <<: *publish
#      env: OS=alpine VARIANT=php71 LATEST=0.9.2
#    - <<: *publish
#      env: OS=alpine VARIANT=php70 
